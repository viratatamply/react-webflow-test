{
  "version": 3,
  "sources": ["../../src/lib/db.ts"],
  "sourcesContent": ["// See https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/constructor\n// for options.\n\nimport { PrismaClient } from '@prisma/client'\n\nimport { emitLogLevels, handlePrismaLogging } from '@redwoodjs/api/logger'\n\nimport { logger } from './logger'\n\nconst prismaClient = new PrismaClient({\n  log: emitLogLevels(['info', 'warn', 'error']),\n})\n\nhandlePrismaLogging({\n  db: prismaClient,\n  logger,\n  logLevels: ['info', 'warn', 'error'],\n})\n\n/**\n * Global Prisma client extensions should be added here, as $extend\n * returns a new instance.\n * export const db = prismaClient.$extend(...)\n * Add any .$on hooks before using $extend\n */\nexport const db = prismaClient\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;;;;;AAGA,oBAA6B;AAE7B,oBAAmD;AAEnD,IAAAA,iBAAe;AAEf,MAAMC,eAAe,IAAIC,2BAAa;EACpCC,SAAKC,6BAAc,CAAC,QAAQ,QAAQ,OAAO,CAAC;AAC9C,CAAC;IAEDC,mCAAoB;EAClBC,IAAIL;EACJM;EACAC,WAAW,CAAC,QAAQ,QAAQ,OAAO;AACrC,CAAC;AAQM,MAAMF,KAAKL;",
  "names": ["import_logger", "prismaClient", "PrismaClient", "log", "emitLogLevels", "handlePrismaLogging", "db", "logger", "logLevels"]
}
